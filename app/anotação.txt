// this is the model for user on database
type User struct {
    Name        string `json:"name" validate:"required"`
    Email       string `json:"email" validate:"required,email,max=100" gorm:"unique"`
    MerchantID  string `json:"merchant_id,omitempty"` // merchant_id is the id of the merchant that the user belongs to
    Password    string `json:"password" validate:"required,min=6,max=20"`
    LoginMethod string `json:"login_method" gorm:"Default:email"` // can be email, google, facebook, etc
    Role        string `json:"role,omitempty" validate:"required,min=4,max=15"`
    Token       string `json:"token,omitempty" gorm:"-"`
    Schema
}

import (
    "github.com/go-playground/validator/v10"
)

// instance of validator to be used in all models
var validate *validator.Validate = validator.New()

if err := validate.Struct(user); err != nil {
	return err
}
return nil
}
if err = models.ValidateUser(&user); err != nil {
	utils.ResponseWithError(c, http.StatusBadRequest, err.Error())
	return
}